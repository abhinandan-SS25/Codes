knitr::opts_chunk$set(echo = TRUE,
message=FALSE, warning = FALSE,
fig.height = 3,
error = TRUE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
knitr::opts_chunk$set(echo = TRUE,
message=FALSE, warning = FALSE,
fig.height = 3,
error = TRUE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
### Add your code here
subset <- planets %>%
group_by(method) %>%
mutate(planets_discovered=n()) %>%
filter(planets_discovered>50)
knitr::opts_chunk$set(echo = TRUE,
message=FALSE, warning = FALSE,
fig.height = 3,
error = TRUE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
knitr::opts_chunk$set(echo = TRUE,
message=FALSE, warning = FALSE,
fig.height = 3,
error = TRUE)
library(tidyverse)
library(lubridate)
source("../../scripts/viridis.R")
### Add your code here
filtered_planets = planets %>%
filter(method=="Radial Velocity") %>%
drop_na(c(year, mass)) %>%
group_by(year) %>%
mutate(planets_discovered=n(), min_mass=min(mass))
## Read in the csv file
planets = read_csv("../../data/exoplanets-clean-through-2022.csv")
co2 = read_table("../../data/co2_weekly_mlo.txt",na="-999.99",comment="#",
col_names=c("year","month","day","year.decimal","ppm","n.days","yr-1-ago","yr-10-ago","increase.1800"))
get_cwd()
get_wd()
getwd()
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
source("../../scripts/viridis.R")
set.seed(20221021)
x = 0:8
p = rnorm(7,5,2.1)
p = sort(round(p / sum(p) * 0.84, 2))
p1 = tibble(x = x, p = c(p, rep(NA,2)))
p1_tab = p1 %>%
mutate(x = str_c(x)) %>%
pivot_wider(names_from = x, values_from = p) %>%
mutate(x = "P(X=x)", .before = `0`)
p1_tab %>%
kable() %>%
kable_styling(position = "center", full_width = FALSE)
dist1 = tibble(x = x, p = c(p, rep(NA,2)))
sum(dist1$p)
View(dist1)
req = 1 - sum(dist1$p, na.rm = TRUE)
dist1[8,2] = req/2
dist1[9,2] = req/2
View(dist1)
sum(dist1$p)
m = mean(dist1$p)
v = var(dist1$p)
s = sqrt(v)
x = 0:120
m1 = x*0.2
x = 0:120
m1 = sum(x*0.2)
x = 0:120
m1 = x*0.2
x = 0:120
mean(x)
m1 = x*0.2
x = 0:120
mean(x)
m1 = x*0.2
m1
x = 0:120
mean(x)
m1 = x*0.2
m1
y = 1:6
m2 = y*0.5
sum(m2)
x = 0:120
mean(x)
m1 = x*0.2
m1
y = 1:6
m2 = y*0.5
m2
x = 0:120
mean(x)
m1 = x*0.2
m1
y = 1:6
y
m2 = y*0.5
m2
x = 0:120
mean(x)
m1 = x*0.2
m1
y = 1:6
y
m2 = y*(1/6)
m2
x = 0:120
mean(x)
m1 = x*0.2
m1
y = 1:6
y
m2 = y*(1/6)
sum(m2)
x = 0:120
mean(x)
m1 = x*0.2
sum(m1)
x = 0:120
m1 = sum(x*0.2)
sd1 = sum(((x-m1)^2)*0.2)
x = 0:120
m1 = 120*0.2
sd1 = sqrt((120*0.2)*0.8)
r2 = 1 - pbinom(20, 120, 0.2) + dbinom(20,120,0.2)
r1 = dbinom(20, 120, 0.2)
x = rbinom(120, 0.2)
x = rbinom(,120, 0.2)
gbinom(120, 0.2, scale = TRUE) +
geom_vline(xintercept = m1, color = "red",linetype = "dashed") +
geom_vline(xintercept = m1 + c(-1,1)*sd1,
color = "red", linetype = "dashed") +
geom_vline(xintercept = m1 + c(-2,2)*sd1,
color = "red", linetype = "dashed") +
geom_vline(xintercept = m1 + c(-3,3)*sd1,
color = "red", linetype = "dashed")
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
source("../../scripts/viridis.R")
getwd
getwd()
setwd(./)
setwd("./scripts")
setwd("..")
setwd("./hw/hw07")
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
gbinom(120, 0.2, scale = TRUE) +
geom_vline(xintercept = m1, color = "red",linetype = "dashed") +
geom_vline(xintercept = m1 + c(-1,1)*sd1,
color = "red", linetype = "dashed") +
geom_vline(xintercept = m1 + c(-2,2)*sd1,
color = "red", linetype = "dashed") +
geom_vline(xintercept = m1 + c(-3,3)*sd1,
color = "red", linetype = "dashed")
p1 = round(pbinom(m1 + sd1, 120, 0.2) - pbinom(m1 - sd1, 120, 0.2), 4)
p2 =  round(pbinom(m1 + (2*sd1), 120, 0.2) - pbinom(m1 - (2*sd1), 120, 0.2),4)
p3 =  round(pbinom(m1 + (3*sd1), 120, 0.2) - pbinom(m1 - (3*sd1), 120, 0.2),4)
prob4 = tibble(
x = seq(-1,8,1),
p = dbinom(x, 7, 0.3),
cdf = pbinom(x, 7, 0.3))
ggplot(prob4, aes(x = x, y = cdf )) +
geom_step(color = "blue") +
geom_hline(yintercept = 0) +
scale_x_continuous(breaks = 0:7) +
xlab("x") +
ylab("Probability") +
ggtitle("Binomial(7, 0.3) distribution CDF") +
theme_minimal()
prob4 = tibble(
x = seq(-1,8,1),
p = dbinom(x, 7, 0.3),
cdf = pbinom(x, 7, 0.3))
ggplot(prob4, aes(x = x, y = cdf )) +
geom_step(color = "blue") +
geom_hline(yintercept = 0.4, linetype = "dashed") +
scale_x_continuous(breaks = 0:7) +
xlab("x") +
ylab("Probability") +
ggtitle("Binomial(7, 0.3) distribution CDF") +
theme_minimal()
prob4 = tibble(
x = seq(-1,8,1),
p = dbinom(x, 7, 0.3),
cdf = pbinom(x, 7, 0.3))
ggplot(prob4, aes(x = x, y = cdf )) +
geom_step(color = "blue") +
geom_hline(yintercept = 0.4, linetype = "dashed", color = "red") +
scale_x_continuous(breaks = 0:7) +
xlab("x") +
ylab("Probability") +
ggtitle("Binomial(7, 0.3) distribution CDF") +
theme_minimal()
qbinom(0.4, 7, 0.3)
3
qbinom(0.75, 7, 0.3)
pbinom(0.50, 600, 0.52)
pbinom(299, 600, 0.52)
pbinom(299, 600, 0.52)
pbinom(299, 600, 0.52)
pbinom(299, 600, 0.52)
1-pbinom(49, 300, 0.5)
1-pbinom(49, 200, 0.5)
1-pbinom(49, 50, 0.5)
1-pbinom(49, 100, 0.5)
1-pbinom(49, 150, 0.5)
1-pbinom(49, 130, 0.5)
1-pbinom(49, 120, 0.5)
1-pbinom(49, 125, 0.5)
1-pbinom(49, 122, 0.5)
1-pbinom(49, 123, 0.5)
1-pbinom(49, 124, 0.5)
1-pbinom(49, 125, 0.5)
1-pbinom(49, 110, 0.5)
1-pbinom(49, 120, 0.5)
1-pbinom(49, 115, 0.5)
1-pbinom(49, 110, 0.5)
1-pbinom(49, 112, 0.5)
1-pbinom(49, 113, 0.5)
pbinom(20, 100, 0.2)
pbinom(20, 100, 0.2)
1-pbinom(19, 100,0.2)
pbinom(20, 100, 0.2)
1-pbinom(20, 100,0.2)
pbinom(19, 100, 0.2)
1-pbinom(18, 100,0.2)
x = 0:100
df = data.frame(x, p=0.2)
View(df)
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = pbinom(x-1, 100, 0.2))
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = 1-pbinom(x-1, 100, 0.2))
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = 1-pbinom(x-1, 100, 0.2)) %>%
filter(le==re)
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = 1-pbinom(x, 100, 0.2)) %>%
filter(le==re)
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = pbinom(x, 100, 0.2, )) %>%
filter(le>= 0.5 & re>=0.5)
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = 1-pbinom(x-1, 100, 0.2, )) %>%
filter(le>= 0.5 & re>=0.5)
1-pbinom(49, 113, 0.5)
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = 1-pbinom(x-1, 100, 0.2, )) %>%
filter(le>= 0.5 & re>=0.5)
p1 = round(pbinom(m1 + sd1, 120, 0.2) - pbinom(m1 - sd1, 120, 0.2), 4)
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
p1 = round(pbinom(m1 + sd1, 120, 0.2) - pbinom(m1 - sd1, 120, 0.2), 4)
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
p1 = round(pbinom(m1 + sd1, 120, 0.2) - pbinom(m1 - sd1, 120, 0.2), 4)
m1 = 120*0.2
sd1 = sqrt((120*0.2)*0.8)
p1 = round(pbinom(m1 + sd1, 120, 0.2) - pbinom(m1 - sd1, 120, 0.2), 4)
p2 =  round(pbinom(m1 + (2*sd1), 120, 0.2) - pbinom(m1 - (2*sd1), 120, 0.2),4)
p3 =  round(pbinom(m1 + (3*sd1), 120, 0.2) - pbinom(m1 - (3*sd1), 120, 0.2),4)
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
set.seed(20221021)
x = 0:8
p = rnorm(7,5,2.1)
p = sort(round(p / sum(p) * 0.84, 2))
p1 = tibble(x = x, p = c(p, rep(NA,2)))
p1_tab = p1 %>%
mutate(x = str_c(x)) %>%
pivot_wider(names_from = x, values_from = p) %>%
mutate(x = "P(X=x)", .before = `0`)
p1_tab %>%
kable() %>%
kable_styling(position = "center", full_width = FALSE)
dist1 = tibble(x = x, p = c(p, rep(NA,2)))
req = 1 - sum(dist1$p, na.rm = TRUE)
dist1[8,2] = req/2
dist1[9,2] = req/2
sum(dist1$p)
m = mean(dist1$p)
v = var(dist1$p)
s = sqrt(v)
r2 = 1 - pbinom(20, 120, 0.2) + dbinom(20,120,0.2)
gbinom(120, 0.2, scale = TRUE) +
geom_vline(xintercept = m1, color = "red",linetype = "dashed") +
geom_vline(xintercept = m1 + c(-1,1)*sd1,
color = "red", linetype = "dashed") +
geom_vline(xintercept = m1 + c(-2,2)*sd1,
color = "red", linetype = "dashed") +
geom_vline(xintercept = m1 + c(-3,3)*sd1,
color = "red", linetype = "dashed")
prob4 = tibble(
x = seq(-1,8,1),
p = dbinom(x, 7, 0.3),
cdf = pbinom(x, 7, 0.3))
ggplot(prob4, aes(x = x, y = cdf )) +
geom_step(color = "blue") +
geom_hline(yintercept = 0.4, linetype = "dashed", color = "red") +
scale_x_continuous(breaks = 0:7) +
xlab("x") +
ylab("Probability") +
ggtitle("Binomial(7, 0.3) distribution CDF") +
theme_minimal()
pbinom(299, 600, 0.52)
1-pbinom(49, 113, 0.5)
x = 0:100
df = data.frame(x, p=0.2)
df %>%
mutate(le = pbinom(x, 100, 0.2), re = 1-pbinom(x-1, 100, 0.2, )) %>%
filter(le>= 0.5 & re>=0.5)
pbinom(299, 600, 0.52)
qbinom(0.4, 7, 0.3)
p1 = round(pbinom(m1 + sd1, 120, 0.2) - pbinom(m1 - sd1, 120, 0.2), 4)
p2 =  round(pbinom(m1 + (2*sd1), 120, 0.2) - pbinom(m1 - (2*sd1), 120, 0.2),4)
p3 =  round(pbinom(m1 + (3*sd1), 120, 0.2) - pbinom(m1 - (3*sd1), 120, 0.2),4)
r2 = 1 - pbinom(20, 120, 0.2) + dbinom(20,120,0.2)
r1 = dbinom(20, 120, 0.2)
m1 = 120*0.2
sd1 = sqrt((120*0.2)*0.8)
m = mean(dist1$p)
v = var(dist1$p)
s = sqrt(v)
sum(dist1$p)
m = sum(dist1$x * dist$p)
dist1 = tibble(x = x, p = c(p, rep(NA,2)))
knitr::opts_chunk$set(echo = TRUE, message = FALSE,
warning = FALSE, error = TRUE, fig.height = 3)
library(tidyverse)
library(kableExtra)
source("../../scripts/viridis.R")
source("../../scripts/ggprob.R")
dist1 = tibble(x = x, p = c(p, rep(NA,2)))
set.seed(20221021)
x = 0:8
p = rnorm(7,5,2.1)
p = sort(round(p / sum(p) * 0.84, 2))
p1 = tibble(x = x, p = c(p, rep(NA,2)))
p1_tab = p1 %>%
mutate(x = str_c(x)) %>%
pivot_wider(names_from = x, values_from = p) %>%
mutate(x = "P(X=x)", .before = `0`)
p1_tab %>%
kable() %>%
kable_styling(position = "center", full_width = FALSE)
dist1 = tibble(x = x, p = c(p, rep(NA,2)))
req = 1 - sum(dist1$p, na.rm = TRUE)
dist1[8,2] = req/2
dist1[9,2] = req/2
m = sum(dist1$x * dist$p)
m = sum(dist1$x * dist1$p)
v = sum(dist1$x * dist1$p *(1 - dist1$p))
s = sqrt(v)
r2 = 1 - pbinom(20, 120, 0.2) + dbinom(20,120,0.2)
r2 = 1 - pbinom(19, 120, 0.2)
r2 = 1 - pbinom(19, 120, 0.2)
